/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_amazon_corretto_crypto_provider_EcUtils */

#ifndef _Included_com_amazon_corretto_crypto_provider_EcUtils
#define _Included_com_amazon_corretto_crypto_provider_EcUtils
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     com_amazon_corretto_crypto_provider_EcUtils
 * Method:    curveNameToInfo
 * Signature: (Ljava/lang/String;[I[B[B[B[B[B[B[B[B[B)I
 */
JNIEXPORT jint JNICALL Java_com_amazon_corretto_crypto_provider_EcUtils_curveNameToInfo
  (JNIEnv *, jclass, jstring, jintArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     com_amazon_corretto_crypto_provider_EcUtils
 * Method:    buildGroup
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_com_amazon_corretto_crypto_provider_EcUtils_buildGroup
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_amazon_corretto_crypto_provider_EcUtils
 * Method:    freeGroup
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_amazon_corretto_crypto_provider_EcUtils_freeGroup
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_amazon_corretto_crypto_provider_EcUtils
 * Method:    getCurveNames
 * Signature: ()[Ljava/lang/String;
 */
JNIEXPORT jobjectArray JNICALL Java_com_amazon_corretto_crypto_provider_EcUtils_getCurveNames
  (JNIEnv *, jclass);

/*
 * Class:     com_amazon_corretto_crypto_provider_EcUtils
 * Method:    getCurveNameFromEncoded
 * Signature: ([B)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_amazon_corretto_crypto_provider_EcUtils_getCurveNameFromEncoded
  (JNIEnv *, jclass, jbyteArray);

#ifdef __cplusplus
}
#endif
#endif
